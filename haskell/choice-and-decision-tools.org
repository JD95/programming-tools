#+TITLE: Choice and Decision Tools
#+STARTUP: hidestar
#+STARTUP: indent

# latex options
#+OPTIONS: author:nil date:nil num:nil 
#+LATEX_HEADER: \usepackage[margin=1.5in]{geometry}
#+LATEX_HEADER: \usepackage{apacite}
#+LATEX_HEADER: \usepackage{setspace}

** how to make a decision?
- empty the bag if it is full
- take the cake out of the oven when the timer is done
- bring me the biggest pumpkin 
- does this test belong to me?
- is this my car?

*** a new type!
#+BEGIN_SRC haskell
bool = true | false
#+END_SRC

*** some new combinators!

| meaning                  | operator |
|--------------------------+----------|
| less than                | <        |
| greater than             | >        |
| equal to                 | ==       |
| less than or equal to    | <=       |
| greater than or equal to | >=       |

*** useful logic functions

not = !
or  = ||
and = &&

** using comparisons to change result of function

*** the ternary operator
#+BEGIN_SRC cpp
// breaking up the problem doesn't help
int add_if_even_and_divisible_by_three(int input){
  return (even(input) && divisible_by_three(input)) ? input + 5 : input;
}
#+END_SRC

*** reading the ternary operator
condition ? value1 : value2

- evaluate the condition before =?= 
- if it evaluates to true, then value1 is the answer
- otherwise value2 is the answer
 
  

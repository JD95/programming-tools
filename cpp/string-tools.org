#+TITLE: String Tools
#+STARTUP: hidestar
#+STARTUP: indent

# latex options
#+OPTIONS: author:nil date:nil num:nil
#+LATEX_HEADER: \usepackage[margin=1.5in]{geometry}
#+LATEX_HEADER: \usepackage{apacite}
#+LATEX_HEADER: \usepackage{setspace}

** find length of string
get the length
#+BEGIN_SRC cpp
int get_length(string s) {
  return s.length();
}
#+END_SRC

** accessing parts of a string
*** front
gets the first character
#+BEGIN_SRC cpp
// get_first("hello") returns 'h'
char get_first(string s) {
  return s.front();
}
#+END_SRC
*** back
gets the last character
#+BEGIN_SRC cpp
// get_last("hello") returns 'o'
char get_last(string s) {
  return s.back();
}
#+END_SRC
*** at
gets the character at a certain spot
#+BEGIN_SRC cpp
// get_at(1, "hello") returns 'e'
// get_at(0, "hello") = get_front("hello")
// get_at(4, "hello") = get_last("hello")
char get_at(int spot, string s) {
  return s.at(spot);
}
#+END_SRC
*** substr
gets the characters between some starting and ending spot
#+BEGIN_SRC cpp
// get_substr(1,4, "hello") returns "ello"
string get_substr(int begin, int end, string s) {
  return s.substr(begin, end);
}
#+END_SRC
** modifying a string

*** insert
adds a character(s) into a string at a certain spot
#+BEGIN_SRC cpp
// insert_word("hello", 4, " world") returns "hello world"
// insert_word(" really", 1, "I love cookies") returns "I really love cookies"
string insert_word(string word, int at, string s) {
  return s.insert(at, word);
}
#+END_SRC
*** erase
removes a character(s) at a certain spot
#+BEGIN_SRC cpp
// remove_word(2, 6, "I don't love cookies") returns "I love cookies"
string remove_word(int at, int length, string s) {
  return s.erase(at, length);
}
#+END_SRC
** searching a string

finds first occurence of substring
#+BEGIN_SRC cpp
// find_cake("Hello cake") returns 6
// find_cake("hello friendo") returns -1
int find_cake(string s) {
  return s.find("cake");
}
#+END_SRC
